%YAML 1.2
---

# Operator Templates
####################

# izhikevich operator with biophysiologically relevant parameters
ik_op:
  base: OperatorTemplate
  equations:
    - "r' = (Delta*k^2*(v-v_r)/(pi*C) + r*(k*(2.0*v-v_r-v_t) - g_e*s_e - g_i*s_i)) / C"
    - "v' = (k*v*(v-v_r-v_t) - C*pi*r*(Delta+pi*C*r/k) + k*v_r*v_t + g_e*s_e*(E_e-v) + g_i*s_i*(E_i-v) + I_ext + eta - u) / C"
    - "u' = a*(b*(v-v_r) - u) + kappa*r"
    - "s' = -s/tau_s + r"
  variables:
    r: output(0.0)
    v: variable(-60.0)
    u: variable(0.0)
    s: variable(0.0)
    Delta: 0.5
    C: 100.0
    k: 1.0
    v_r: -60.0
    v_t: -40.0
    g_e: 7.0
    g_i: 5.0
    E_e: 0.0
    E_i: -60.0
    tau_s: 4.0
    b: -2.0
    a: 0.03
    kappa: 100.0
    eta: 0.0
    I_ext: input(0.0)
    s_e: input(0.0)
    s_i: input(0.0)

spn_op:
  base: ik_op
  variables:
    C: 15.0
    Delta: 2.0
    v_r: -80.0
    v_t: -30.0
    a: 0.01
    b: -20.0
    kappa: 90.0

spn_d1_op:
  base: spn_op
  equations:
    replace:
      v_r: v_r_d1
      kappa: kappa_d1
      g_e: g_e_d1
      g_i: g_i_d1
    add:
      - "v_r_d1 = v_r*(1+c1*phi)"
      - "kappa_d1 = kappa*(1-c2*phi)"
      - "g_e_d1 = g_e*(1+c3*phi)"
      - "g_i_d1 = g_i*(1-c4*phi)"
  variables:
    phi: input(0.0)
    v_r_d1: variable(-80.0)
    d_d1: variable(0.0)
    g_e_d1: variable(0.0)
    g_i_d1: variable(0.0)
    c1: 0.03
    c2: 0.3
    c3: 5.0
    c4: 1.0

spn_d2_op:
  base: spn_op
  equations:
    replace:
      k: k_d2
      g_ampa: g_ampa_d2
      g_gaba: g_gaba_d2
    add:
      - "k_d2 = k*(1-c1*phi)"
      - "g_e_d2 = g_e*(1+c2*phi)"
      - "g_i_d2 = g_i*(1+c3*phi)"
  variables:
    phi: input(0.0)
    k_d2: variable(1.0)
    g_e_d2: variable(0.0)
    g_i_d2: variable(0.0)
    c1: 0.03
    c2: 1.0
    c3: 1.0

fsi_op:
  base: ik_op
  equations:
    replace:
      v_r: v_r_d1
    add:
      - "v_r_d1 = v_r*(1-c1*phi)"
  variables:
    v_r_d1: variable(0.0)
    C: 80.0
    Delta: 1.0
    v_r: -70.0
    v_t: -50.0
    a: 0.2
    b: 0.025
    kappa: 0.0
    q: 0.5
    c1: 0.1
    phi: input(0.0)

# node templates
################

spn_pop:
  base: NodeTemplate
  operators:
    - spn_op

spn_d1_pop:
  base: NodeTemplate
  operators:
    - spn_d1_op

spn_d2_pop:
  base: NodeTemplate
  operators:
    - spn_d2_op

fsi_pop:
  base: NodeTemplate
  operators:
    - fsi_op

# edge templates
################

# circuit templates
###################

spn:
  base: CircuitTemplate
  nodes:
    p: spn_pop
  edges:
    - [p/spn_op/s, p/spn_op/s_i, null, {weight: 1.0}]

spn_d1:
  base: CircuitTemplate
  nodes:
    p: spn_d1_pop
  edges:
    - [p/spn_d1_op/r, p/spn_d1_op/r_i, null, {weight: 1.0}]

spn_d2:
  base: CircuitTemplate
  nodes:
    p: spn_d2_pop
  edges:
    - [p/spn_d2_op/r, p/spn_d2_op/r_i, null, {weight: 1.0}]

fsi:
  base: CircuitTemplate
  nodes:
    p: fsi_pop
  edges:
    - [p/fsi_op/r, p/fsi_op/r_i, null, {weight: 1.0}]
